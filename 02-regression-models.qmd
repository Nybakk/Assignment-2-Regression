---
title: "Assignment 2: Regression models, predicting from data"
format: 
  html:
    code-fold: true
execute:
  warning: false  # Skjuler varselmeldinger
editor_options: 
  chunk_output_type: console
---

## Introduksjon / Bakgrunn

Her kan det være greit at vi legger inn litt om oppgaveteksten, se link https://dhammarstrom.github.io/quant-methods-workshops/assignment-2.html eller READMe.md.

## Del 1: Laktat terskler

Laktat terskel er en variabel som er godt brukt for å forutsi prestasjon innenfor utholdenhets idretter, til å styre intensiteten av treningsøkter og evaluere trenings effekt @machado2012. Det finnes ulike metoder for å finne testpersonens laktat terskel, @machado2012 forteller oss at den "maximal-deviation method" (Dmax) anbefalt av Cheng et al. 1992, bidrar med å kunne evaluere de ulike mekanismene som virker bestemmende for prestasjon innenfor langdistanseløping og sykling. Videre hadde denne metoden en bedre korrelasjon med prestasjon og laktat terskel sammenliknet med andre metoder. 
I våres reliabilitets tester ble det ikke utført laktat målinger, på bakgrunn av dette benytter vi oss av data settet til "cyclingstudy". De representative tersklene som blir undersøkt er 2 mmol L-1 og 4 mmol L-1. 
*Kort introduksjon av denne delen av oppgaven. Legge kort frem korleis vi kan kalkulere laktatterskel (benytt kanskje [Machado](https://www.tandfonline.com/doi/abs/10.1080/02640414.2012.702424) og kvifor dette kan være gunstig.*

**Metode**: *Her må også koden og utregningen for laktatterskelen komme frem, samt korleis vi regnet ut reliabiliteten mellom to terskler (typical error som en prosent av gj.snittet, se [Hopkins](https://link-springer-com.ezproxy.inn.no/article/10.2165/00007256-200030010-00001).Siden vi ikkje gjorde terskeltesting, så tenker eg at vi kan ta utgangspunkt i `exscidata` pakken, se filen laktatprofil-g2.xlsx for data.*

**Diskusjon**: *Viktig at vi visualiserer det med tabell og graf.Snakke om kva resultatene sier oss og kva nytte dei kan gi oss*


## Del 2: Forutsi størrelser på DNA fragmenter eller stiningene i en qPCR-kalibreringskurve

**Introduksjon**: *Samme som over - kort om kva arbeid vi gjorde på molekylærelab og hensikt, se pdf-fil DNA-ekstraksjon gruppe 2. Her må vi også bestemme oss for kva vi velger å fokusere på: DNA-fragmentene eller qPCR resultatene. Legge også kort til her kva informasjon dette gir oss: enten DNA vs qPCR.*

I denne delen av oppgaven tar vi utgangspunkt i forsøket vi gjorde på molekylærlabben 05. - 06. september, hvor vi ekstraherte DNA fra blod. Videre forsøkte vi å isolere genene som assosieres med hurtig muskelfibersammentrekning (R/R) og langsom muskelfibersammentrekning (X/X) ved hjelp av en PCR-maskin. Prøvene herfra ble testet videre ved hjelp av elektroforese i agarose gel sammen med en DNA-stige (ladder) som brukes som markør for å kartlegge genene. Etter elektroforesene tok vi bilde av preøven slik at vi kunne observere resultatene. Stigen markerer antall hvert fetiende basebar (bp) opp til 300, og hvert 100. basepar videre til 1000bp. det dominante R/R-genet har 413bp og det ressesive X/X-genet har 318bp. De små genmolekylene med få basepar vil trenge lenger in i gelen under elektroforesen, så X/X-genet vil altså trenge lenger inn i gelen ved elektroforese. Dette kan være vanskelig å observere bare med øynene, og vil ikke være særlig nøyaktig. For å få et mer reliabelt resultat har vi derfor brukt følgende metode. Fra prøvene våre var det tre brønner som gav resultat - to med et gen, og en med to. 

(her har jeg delvis brukt referanse: Henning Wackerhage: molecular exercise physiology. Vet ikke om det er nødvendig å legge til)

**Metode**: *Om vi velger å analysere DNA-fragmentene så tenker eg vi følger linket veileder i oppgåveteksten, se [her](https://trainome.github.io/protocols/sw_pcr_size_determination.html). Her må vi også inkludere koden for korleis man kom frem til dei predikerte størrelsene.* *Velger vi derimot å se på helningen på kalibreringskurven, må vi bruke innsamlet data til å beregne reaksjonseffektiviteten.*

Først har vi brukt ImageJ Fiji for å behandle bildet vi fikk fra DNA-prøvene. Vi inverterte bildet for å få tydeligere farger, roterte det rett vei og klipte ut delen av bildet vi ville bruke - altså analysen av våre prøver. Videre brukte vi rektangelverktøyet for å markere stigen og prøvene vi ville analysere. Ut fra de markerte områdene lager ImageJ fiji grafer for hver brønn. Vi markerte toppunktene i alle grafene som indikerer gen (og trinn på stigen). Programmet registrerer plasseringen til toppunktene og disse "koordinatene" legges inn i et excell-dokument som vi bruker til beregningene.


```{r}

library(readxl)

dat <- read_excel("data/resultat_dna_analyse.xlsx")

```

For å finne ut av molekylstørrelsen til de ukjente prøvene våre må vi først kalibrere stigen. Dette gjør vi ved å lage en data.fram som vi kaller ladder. Her er tallene omvendt proposjonale ettersom det er de små molekylene som trekkes lengst inn i gelen. Denne dataframen kaller vi "ladder".

Videre må vi også lage en data.fram for de ukjente variablene som vi kaller "unknown"

```{r}
## lage dataramme for å finne avstand og molekylærvekt

ladder <- data.frame(dist = c(36, 59.5, 86.5,
                              119.5, 159.5, 208.5,
                              269.5, 351.5, 396.5,
                              455.5, 521.5, 599.5, 701.5),
                     mw = c(1000, 900, 800, 
                            700, 600, 500, 
                            400, 300, 250, 
                            200, 150, 100, 50))

## lage ny dataramme med ukjente variabler

unknown <- data.frame(dist = c(258.5, 262.5, 265.5, 335.5))


```

For å lage en kalibreringsmodell bruker vi de samme dataene i ggplot for å vise stigen. Dette brukes videre for å estimere størrelsen på de ukjente variablene. Vi valgte å bruke en bøyd graf (poly) for å få minst mulig avvik.

```{r}
## lage en kalibreringsmodell ved hjelp av stigen

library(tidyverse)

ggplot(data = data.frame(x = c(36, 59.5, 86.5,
                              119.5, 159.5, 208.5,
                              269.5, 351.5, 396.5,
                              455.5, 521.5, 599.5, 701.5), 
                         y = c(1000, 900, 800, 
                            700, 600, 500, 
                            400, 300, 250, 
                            200, 150, 100, 50)), 
       aes(x, y)) + geom_point() +
  
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), 
                    color = "green", se = FALSE)+
  
  scale_y_continuous(limits = c(0, 1000)) +
  
  scale_x_continuous(limits = c(0, 750))
```

Til slutt brukte vi følgende koder for å estimere molekylstørrelsen på genene i prøven vår.

```{r}
# Fit the model
cal <- lm(log(mw) ~ dist, data = ladder)

# Check model performance, R^2 should be ~ 1.
summary(cal)

# Estimate molecular weights from migration distances
preds <- exp(predict(cal, newdata = unknown)) 


```
Brønn 1: 407 bp
Brønn 2: 401 bp
Brønn 3: 396 bp og 296 bp

**Diskusjon**: *Vise frem resultatene og snakke kva dei betyr og gir oss av informasjon. Her kan vi ogs ta med diskusjonen/konklusjonen vår fra lab-rapporten vår.*

Denne analysen viser at ingen av genene våre har helt riktig størelse i forhold til genene vi testet for - R/R (413bp) og X/X (318bp). Vi er likevel i nærheten som kan tyde på at allelene for brønn 1 og 2 er R/R og brønn 3 er R/X. Avviket kan forklares med unøyaktighet under DNA-testen (sansynlig ettersom validitetskontrollen i prøveresultatet ikke kom fram) og med dårlig kvalitet på bildet som vi brukte i denne oppgaven. I rapporten fra forsøket tolket vi prøvene annerledes og trodde at brønn 1, 2 og 3 alle hadde alleler litt over 300bp og at brønn 3 i tillegg hadde en feil med en ukjent allel som var på 250bp. Dette viser at det er mye unæyaktighet ved å bruke kun øynene til å tolke resultatet.

## Del 3: Tolkning av regresjonsmodell

**Introduksjon**: *Beskrive kort oppgåven/hensikten med denne delen av oppgåven slik som over. Bestemme dei to variablene vi ønsker å se på, og presentere spørsmålet mellom dei to variablene i datasettet `hypertrofi`. Kanskje vi skal kort nevne at vi vil diskutere standardfeilen, t-verdien og p-verdien knytt til regresjonstabellen som vi har laget.*


I denne delen av oppgaven har vi valgt å se nærmere på variablene FAST_NUCLEI_T1 og TRAINING_AGE i datasettet `hypertrofi`, som er en del av `exscidata` pakken. For utforming av tabeller, figurer og grafer bruker vi `tidyverse`, `broom` og `gt`.

```{r}
# Laster inn nødvendige biblioteker
library(exscidata)
library(tidyverse)
library(gt)
library(broom)
```

I `?hypertrofi` er FAST_NUCLEI_T1 beskrevet som antall myonuclei per type-II muskelfiber, mens TRAINING_AGE viser til antall år med tidligere treningserfaring. Antall myonuclei per type-II muskelfiber, kan ha noko å si om muskelens egenskap til å utvikle kraft og personers styrke (sett inn ref rfa McArdle & Catch kap 22). Det er også diskutert om trening kan føre til endringer i muskelfiber type eller om de genetiske faktorene er det som er avgjørende for muskelfiber type fordelingen til den enkelte (ref, McArdle & Catch s.535). Vi ønsker derfor å se nærmer om det er en lineær sammenheng mellom FAST_NUCLEI_T1 og TRAINING_AGE i datasettet `hypertrofi`.   


**Spørsmålet**: Er det et lineært forhold mellom myonuclei per fiber CSA i type 2 og treningsalder? 

**Metode**: *Vise og forklare fremgangsmåte i flytende tekst (unngå stikkord/punktliste). Legge til koden og vise frem regresjonstabellen*

Under i **Graf \@ref(fig:plot-training-age-myonuclei)** er FAST_NUCLEI_T1 satt som den avhengige variabelen på y-aksen, mens TRAINING_AGE er valgt som den uavhengige variabelen på x-aksen. Grafen er ment for å gi oss et raskt overblikk av dataene. Umiddelbart så kan man se at det er et stort sprik mellom punktene, og at stigningen på den rette linjen har en liten negativt stiningstall, men er ganske nær null. Dette gir oss en viss indikasjon på at det er lite lineær sammenheng mellom variablene (en ref?).

```{r, plot-training-age-myonuclei, fig.cap="Graf 1: Sammenheng mellom treningalder og myonuclei per fiber CSA i Type-II"}
# Laster inn data
data("hypertrophy")

# Filtrerer ut NA-verdier før du velger variabler
ds <- hypertrophy %>%
  filter(!is.na(TRAINING_AGE) & !is.na(FAST_NUCLEI_T1)) %>%
  select(PARTICIPANT, GROUP, TRAINING_AGE, FAST_NUCLEI_T1)

# Plotter data uten NA-verdier
ds %>% 
  ggplot(aes(TRAINING_AGE, FAST_NUCLEI_T1)) +
  geom_point(size = 2, fill = "red") +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Sammenheng mellom treningserfaring og myonuklei",
    x = "Treningsår", 
    y = "Myonuklei per fiber CSA i Type II") +
  theme_minimal()
```


``` {r, results ='asis'}
# Lager lineær modell med ds uten NA-verdier
mod1 <- lm(FAST_NUCLEI_T1 ~ TRAINING_AGE, data = ds)

# Henter ut koeffisienter og deres statistikker
model_summary <- tidy(mod1)

# Tilpasser p-verdier og runder av
model_summary <- model_summary %>%
  mutate(
    term = ifelse(term == "(Intercept)", "Intercept (Konstantledd)", "Treningserfaring (år)"),
    p.value = ifelse(p.value < 0.001, "< 0.001", round(p.value, 3)),
    estimate = round(estimate, 3),
    std.error = round(std.error, 3),
    statistic = round(statistic, 3)
  )

# Lager regresjonstabell med forklarende radnavn
regression_table <- model_summary %>%
  select(term, estimate, std.error, statistic, p.value) %>%
  gt() %>%
  fmt_auto() %>%
  cols_label(
    term = "Term",
    estimate = "Estimert koeffisient",
    std.error = "Standardfeil",
    statistic = md("*t*-verdi"),
    p.value = md("*p*-verdi")
  ) %>% 
  tab_header(
    title = "Resultater fra lineær regresjon",
    subtitle = "Effekten av treningserfaring på myonuklei per fiber"
  ) %>%
  tab_source_note(
    source_note = "**Notat**: *p*-verdier mindre enn 0.05 anses som statistisk signifikante."
  )

# Vis resultatene
print(regression_table)

```

**Diskusjon**: *Her kommer beskrivelsen og forklaring av standardfeilen, t-verdien og p-verdien som vi har funnet. Her benytter vi oss av pensum (Frigessi and Aalen 2018), (Campbell, Walters, and Machin 2020) og (Spiegelhalter 2019, kap 5).*

*Tenker det også viktig å få inn svar på spørsmålene: "Korleis definerer og tolker man p-verdien i regresjonstabellen vår? Kva betyr den?*
